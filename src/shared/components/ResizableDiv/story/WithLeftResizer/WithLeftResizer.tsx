import { useState } from 'react';

import styles from './WithLeftResizer.module.css';

import { ResizableDiv } from '../../ResizableDiv';
import type { ResizableDivProps } from '../../types';

type WithLeftResizerProps = ResizableDivProps;

export const WithLeftResizerComponent = (args: WithLeftResizerProps) => {
    const [logs, setLogs] = useState<string[]>([]);
    const [currentWidth, setCurrentWidth] = useState(args.initialWidth || 35);
    const [persistenceEnabled, setPersistenceEnabled] = useState(true);

    const addLog = (message: string) => {
        const timestamp = new Date().toLocaleTimeString();
        setLogs((prev) => [`[${timestamp}] ${message}`, ...prev.slice(0, 9)]);
    };

    const clearSavedData = () => {
        localStorage.removeItem('storybook-left-resizer-panel');
        addLog('–°–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ—á–∏—â–µ–Ω—ã –∏–∑ localStorage');
    };

    const togglePersistence = () => {
        setPersistenceEnabled(!persistenceEnabled);
        if (!persistenceEnabled) {
            addLog('–ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ');
        } else {
            addLog('–ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–∫–ª—é—á–µ–Ω–æ');
            clearSavedData();
        }
    };

    return (
        <ResizableDiv
            {...args}
            resizerPosition="left"
            persistenceKey={
                persistenceEnabled ? 'storybook-left-resizer-panel' : undefined
            }
            onWidthChange={(width) => {
                setCurrentWidth(width);
                const message = persistenceEnabled
                    ? `–®–∏—Ä–∏–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∞ –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: ${width.toFixed(1)}%`
                    : `–®–∏—Ä–∏–Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∞: ${width.toFixed(1)}%`;
                addLog(message);
                args.onWidthChange?.(width);
            }}
            onResizeStart={(width) => {
                addLog(`–ù–∞—á–∞–ª–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞: ${width.toFixed(1)}%`);
                args.onResizeStart?.(width);
            }}
            onResizeEnd={(width) => {
                addLog(`–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞: ${width.toFixed(1)}%`);
                args.onResizeEnd?.(width);
            }}
        >
            <div className={styles.container}>
                <h2 className={styles.title}>–ü–∞–Ω–µ–ª—å —Å –ª–µ–≤—ã–º —Ä–µ—Å–∞–π–∑–µ—Ä–æ–º</h2>

                <div className={styles.currentWidthBlock}>
                    <strong>–¢–µ–∫—É—â–∞—è —à–∏—Ä–∏–Ω–∞:</strong> {currentWidth.toFixed(1)}%
                </div>

                <div className={styles.resizerInfo}>
                    <div className={styles.resizerIndicator}>
                        ‚Üê –†–µ—Å–∞–π–∑–µ—Ä —Å–ª–µ–≤–∞
                    </div>
                    <p className={styles.resizerDescription}>
                        –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ç–∞—â–∏—Ç—å –ª–µ–≤—É—é –≥—Ä–∞–Ω–∏—Ü—É –ø–∞–Ω–µ–ª–∏ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è
                        —à–∏—Ä–∏–Ω—ã. –¢–∞–∫–∂–µ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–ª–∞–≤–∏—à–∏ ‚Üê –∏ ‚Üí –¥–ª—è
                        —Ç–æ—á–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏.
                    </p>
                </div>

                <div className={styles.persistenceSection}>
                    <h3 className={styles.persistenceTitle}>
                        üíæ –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
                    </h3>
                    <div className={styles.persistenceControls}>
                        <label className={styles.checkboxLabel}>
                            <input
                                type="checkbox"
                                checked={persistenceEnabled}
                                onChange={togglePersistence}
                                className={styles.checkbox}
                            />
                            –°–æ—Ö—Ä–∞–Ω—è—Ç—å —à–∏—Ä–∏–Ω—É –≤ localStorage
                        </label>
                        {persistenceEnabled && (
                            <div className={styles.persistenceInfo}>
                                <small>
                                    –ö–ª—é—á: storybook-left-resizer-panel
                                </small>
                                <button
                                    onClick={clearSavedData}
                                    className={styles.clearButton}
                                >
                                    –û—á–∏—Å—Ç–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
                                </button>
                            </div>
                        )}
                    </div>
                </div>

                <div className={styles.logsSection}>
                    <h3 className={styles.logsTitle}>–ñ—É—Ä–Ω–∞–ª —Å–æ–±—ã—Ç–∏–π:</h3>
                    <div className={styles.logsContainer}>
                        {logs?.length === 0 ? (
                            <div className={styles.emptyLogsMessage}>
                                –ù–∞—á–Ω–∏—Ç–µ –∏–∑–º–µ–Ω—è—Ç—å —Ä–∞–∑–º–µ—Ä –ø–∞–Ω–µ–ª–∏...
                            </div>
                        ) : (
                            logs.map((log, index) => (
                                <div
                                    key={index}
                                    className={`${styles.logEntry} ${
                                        index === 0
                                            ? styles.logEntryLatest
                                            : styles.logEntryOld
                                    }`}
                                >
                                    {log}
                                </div>
                            ))
                        )}
                    </div>
                </div>
            </div>
        </ResizableDiv>
    );
};
