.tree {
    font-family:
        -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
    font-size: var(--text-size-body);
    line-height: 1.4;
    color: var(--text-color-main);
    background: var(--background-main);
    overflow: hidden;
}

.title {
    padding: 1rem 1rem 0rem 1rem;
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
}

.titleEndContent {
    display: flex;
    flex-direction: row;
    gap: 0.5rem;
    align-items: center;
    justify-content: center;
}

.treeContainer {
    position: relative;
    height: 100%;
    overflow: auto;
}

.searchContainer {
    padding: 1rem;
    position: relative;
}

.searchInput {
    width: 100%;
    padding: 0.375rem 0.75rem;
    padding-right: 2rem;
    border: 0.0625rem solid var(--border-main-color);
    border-radius: 0.25rem;
    font-size: var(--text-size-body);
    background: var(--input-background-color);
    color: var(--text-color-main);
    outline: none;
    transition: border-color 0.2s ease;
}

.searchInput:focus {
    border-color: var(--border-active-color);
    box-shadow: 0 0 0 0.125rem var(--shadow-color);
}

.searchClearButton {
    position: absolute;
    right: 1rem;
    top: 50%;
    transform: translateY(-50%);
    background: none;
    border: none;
    cursor: pointer;
    padding: 0.25rem;
    border-radius: 0.125rem;
    color: var(--text-color-secondary);
    font-size: 0.75rem;
    transition: all 0.2s ease;
}

.searchClearButton:hover {
    background-color: var(--background-secondary);
    color: var(--text-color-main);
}

.treeList {
    list-style: none;
    margin: 0;
    padding: 0;
}

.treeNode {
    position: relative;
    user-select: none;
    cursor: pointer;
    transition: background-color 0.15s ease;
}

.treeNode:hover {
    background-color: var(--background-dark);
}

.treeNode.selected {
    background-color: var(--background-secondary);
    color: var(--text-color-accent);
}

.treeNode.dragging {
    opacity: 0.5;
}

.treeNode.dragOver {
    background-color: var(--success);
    border: 0.125rem dashed var(--color-brand);
}

.nodeContent {
    display: flex;
    align-items: center;
    padding: 0.25rem 1rem;
    min-height: 1.5rem;
    position: relative;
}

.nodeIndent {
    flex-shrink: 0;
}

.nodeIcon {
    width: 1rem;
    height: 1rem;
    margin-right: 0.375rem;
    flex-shrink: 0;
    display: flex;
    align-items: center;
    justify-content: center;
}

.nodeIcon svg {
    width: 100%;
    height: 100%;
}

.nodeName {
    flex: 1;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}

.nodeChildren {
    overflow: hidden;
    transition:
        max-height 0.3s ease,
        opacity 0.2s ease;
}

.nodeChildren.collapsed {
    max-height: 0;
    opacity: 0;
}

.nodeChildren.expanded {
    max-height: 62.5rem;
    opacity: 1;
}

.virtualizedContainer {
    height: 100%;
    overflow: auto;
}

.virtualizedItem {
    position: absolute;
    left: 0;
    right: 0;
}

.emptyState {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    padding: 2.5rem 1.25rem;
    color: var(--text-color-secondary);
    text-align: center;
}

.emptyStateIcon {
    width: 3rem;
    height: 3rem;
    margin-bottom: 1rem;
    opacity: 0.5;
}

.emptyStateText {
    font-size: var(--text-size-body);
    margin-bottom: 0.5rem;
}

.emptyStateSubtext {
    font-size: var(--text-size-body);
    opacity: 0.7;
}

.loadingState {
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 1.25rem;
    color: var(--text-color-secondary);
}

.spinner {
    width: 1.25rem;
    height: 1.25rem;
    border: 0.125rem solid var(--border-main-color);
    border-top: 0.125rem solid var(--color-brand);
    border-radius: 50%;
    animation: spin 1s linear infinite;
    margin-right: 0.5rem;
}

@keyframes spin {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}

/* Анимации для плавного разворачивания */
@keyframes expandNode {
    from {
        max-height: 0;
        opacity: 0;
    }
    to {
        max-height: 62.5rem;
        opacity: 1;
    }
}

@keyframes collapseNode {
    from {
        max-height: 62.5rem;
        opacity: 1;
    }
    to {
        max-height: 0;
        opacity: 0;
    }
}

.nodeChildren.animating.expanded {
    animation: expandNode 0.3s ease forwards;
}

.nodeChildren.animating.collapsed {
    animation: collapseNode 0.3s ease forwards;
}

/* Адаптивность */
@media (max-width: 48rem) {
    .tree {
        font-size: var(--text-size-body);
    }

    .nodeContent {
        padding: 0.375rem 0.75rem;
        min-height: 2rem;
    }

    .nodeIcon {
        width: 1.25rem;
        height: 1.25rem;
        margin-right: 0.5rem;
    }
}
